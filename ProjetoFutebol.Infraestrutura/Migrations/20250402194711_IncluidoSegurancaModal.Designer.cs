// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFutebol.Infraestrutura;

#nullable disable

namespace ProjetoFutebol.Infraestrutura.Migrations
{
    [DbContext(typeof(ProjetoFutebolDbContext))]
    [Migration("20250402194711_IncluidoSegurancaModal")]
    partial class IncluidoSegurancaModal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Competicao", b =>
                {
                    b.Property<int>("CompeticaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompeticaoID"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NomeCompeticao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PaisID")
                        .HasColumnType("int");

                    b.Property<string>("Temporada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCompeticao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompeticaoID");

                    b.HasIndex("PaisID");

                    b.ToTable("Competicoes", (string)null);
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Equipe", b =>
                {
                    b.Property<int>("EquipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipeID"));

                    b.Property<string>("Escudo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NomeAbreviado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomeEquipe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("EquipeID");

                    b.ToTable("Equipes", (string)null);
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.EquipeCompeticao", b =>
                {
                    b.Property<int>("EquipeID")
                        .HasColumnType("int");

                    b.Property<int>("CompeticaoID")
                        .HasColumnType("int");

                    b.HasKey("EquipeID", "CompeticaoID");

                    b.HasIndex("CompeticaoID");

                    b.ToTable("EquipesCompeticoes", (string)null);
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Pais", b =>
                {
                    b.Property<int>("PaisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaisID"));

                    b.Property<string>("CodigoPais")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("NomePais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PaisID");

                    b.ToTable("Paises", (string)null);
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Partida", b =>
                {
                    b.Property<int>("PartidaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartidaID"));

                    b.Property<int>("CompeticaoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPartida")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PlacarID")
                        .HasColumnType("int");

                    b.Property<int>("TimeDaCasaID")
                        .HasColumnType("int");

                    b.Property<int>("TimeVisitanteID")
                        .HasColumnType("int");

                    b.HasKey("PartidaID");

                    b.HasIndex("CompeticaoID");

                    b.HasIndex("TimeDaCasaID");

                    b.HasIndex("TimeVisitanteID");

                    b.ToTable("Partidas", (string)null);
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Placar", b =>
                {
                    b.Property<int>("PlacarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlacarID"));

                    b.Property<int>("PartidaID")
                        .HasColumnType("int");

                    b.Property<int>("PlacarTimeDaCasa")
                        .HasColumnType("int");

                    b.Property<int>("PlacarVisitante")
                        .HasColumnType("int");

                    b.Property<int?>("VencedorID")
                        .HasColumnType("int");

                    b.HasKey("PlacarID");

                    b.HasIndex("PartidaID")
                        .IsUnique();

                    b.HasIndex("VencedorID");

                    b.ToTable("Placares", (string)null);
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Competicao", b =>
                {
                    b.HasOne("ProjetoFutebol.Dominio.Entidades.Pais", "Pais")
                        .WithMany("Competicoes")
                        .HasForeignKey("PaisID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.EquipeCompeticao", b =>
                {
                    b.HasOne("ProjetoFutebol.Dominio.Entidades.Competicao", "Competicao")
                        .WithMany("EquipesCompeticao")
                        .HasForeignKey("CompeticaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoFutebol.Dominio.Entidades.Equipe", "Equipe")
                        .WithMany("Competicoes")
                        .HasForeignKey("EquipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competicao");

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Partida", b =>
                {
                    b.HasOne("ProjetoFutebol.Dominio.Entidades.Competicao", "Competicao")
                        .WithMany("Partidas")
                        .HasForeignKey("CompeticaoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjetoFutebol.Dominio.Entidades.Equipe", "TimeDaCasa")
                        .WithMany()
                        .HasForeignKey("TimeDaCasaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjetoFutebol.Dominio.Entidades.Equipe", "TimeVisitante")
                        .WithMany()
                        .HasForeignKey("TimeVisitanteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Competicao");

                    b.Navigation("TimeDaCasa");

                    b.Navigation("TimeVisitante");
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Placar", b =>
                {
                    b.HasOne("ProjetoFutebol.Dominio.Entidades.Partida", "Partida")
                        .WithOne("Placar")
                        .HasForeignKey("ProjetoFutebol.Dominio.Entidades.Placar", "PartidaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoFutebol.Dominio.Entidades.Equipe", "Vencedor")
                        .WithMany()
                        .HasForeignKey("VencedorID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Partida");

                    b.Navigation("Vencedor");
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Competicao", b =>
                {
                    b.Navigation("EquipesCompeticao");

                    b.Navigation("Partidas");
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Equipe", b =>
                {
                    b.Navigation("Competicoes");
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Pais", b =>
                {
                    b.Navigation("Competicoes");
                });

            modelBuilder.Entity("ProjetoFutebol.Dominio.Entidades.Partida", b =>
                {
                    b.Navigation("Placar")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
